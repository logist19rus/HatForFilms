// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models.Data;

namespace Models.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210831114422_addMemberToHat")]
    partial class addMemberToHat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Classes.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("Models.Classes.FilmInHat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("adderId")
                        .HasColumnType("int")
                        .HasColumnName("AdderId");

                    b.Property<int?>("filmId")
                        .HasColumnType("int")
                        .HasColumnName("FilmId");

                    b.Property<int?>("hatId")
                        .HasColumnType("int")
                        .HasColumnName("HatId");

                    b.HasKey("Id");

                    b.HasIndex("adderId");

                    b.HasIndex("filmId");

                    b.HasIndex("hatId");

                    b.ToTable("FilmesInHats");
                });

            modelBuilder.Entity("Models.Classes.Hat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int")
                        .HasColumnName("CreatorId");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("MemberId");

                    b.ToTable("Hats");
                });

            modelBuilder.Entity("Models.Classes.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LastActivity")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastActivity");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.Property<string>("token")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Token");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("Models.Classes.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TokenId")
                        .HasColumnType("int")
                        .HasColumnName("TokenId");

                    b.Property<string>("login")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Login");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Models.Classes.Film", b =>
                {
                    b.HasOne("Models.Classes.User", "Owner")
                        .WithMany("AddedFilms")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Models.Classes.FilmInHat", b =>
                {
                    b.HasOne("Models.Classes.User", "Adder")
                        .WithMany("InHatFilms")
                        .HasForeignKey("adderId");

                    b.HasOne("Models.Classes.Film", "Film")
                        .WithMany("FilmToHatRelationship")
                        .HasForeignKey("filmId");

                    b.HasOne("Models.Classes.Hat", "Hat")
                        .WithMany("Films")
                        .HasForeignKey("hatId");

                    b.Navigation("Adder");

                    b.Navigation("Film");

                    b.Navigation("Hat");
                });

            modelBuilder.Entity("Models.Classes.Hat", b =>
                {
                    b.HasOne("Models.Classes.User", "Creator")
                        .WithMany("Hats")
                        .HasForeignKey("CreatorId");

                    b.HasOne("Models.Classes.User", "Member")
                        .WithMany("MemberedHats")
                        .HasForeignKey("MemberId");

                    b.Navigation("Creator");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Models.Classes.Token", b =>
                {
                    b.HasOne("Models.Classes.User", "User")
                        .WithOne("token")
                        .HasForeignKey("Models.Classes.Token", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Models.Classes.Film", b =>
                {
                    b.Navigation("FilmToHatRelationship");
                });

            modelBuilder.Entity("Models.Classes.Hat", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("Models.Classes.User", b =>
                {
                    b.Navigation("AddedFilms");

                    b.Navigation("Hats");

                    b.Navigation("InHatFilms");

                    b.Navigation("MemberedHats");

                    b.Navigation("token");
                });
#pragma warning restore 612, 618
        }
    }
}
